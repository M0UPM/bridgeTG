#!/bin/bash
# Script for adding password to OpenBridges and adding/removing talkgroups for OpenBridges using tarantool
# Written for BrandMeister by Dave Godfrey M0UPM

# Set some variables
yn=$yn
answer=$answer
answer1=$answer1
bridgeid=$bridgeid
bridgepass=$bridgepass
answer2=$answer2
action=$action
master=$master
id=$id
num=$num
note=$note
re='^[0-9]+$'

# Now on to the questions

echo -e "Does the bridge already exist in BrandMeister.json?"
read -r yn

case $yn in

   no | No | n | N | nO) 
    echo -e "Please enter bridge details in BrandMeister.json and return here" >&2; exit 1
	;;
	
   yes | Yes | y | Y | YES | YeS | yEs | yES)
     echo -e "Has the password for the bridge already been set in Tarantool?"
	 read -r answer
	 ;;
esac

case $answer in
 
    no | No | n | N | nO)
	 echo -e "Would you like to set it now?"
	 read answer1
	 ;;
	 
	yes | Yes | y | Y | YES | YeS | yEs | yES)
	 echo -e "Would you like to add or delete a talkgroup?"
	 read action
	 ;;
	 
esac

case $answer1 in

    no | No | n | N | nO)
	echo -e "Please return once password is set for the bridge you wish to change" >&2; exit 1
	;;
	
    yes | Yes | y | Y | YES | YeS | yEs | yES)
	echo -e "Please enter bridge id number"
        read bridgeid
	echo -e "Please enter desired password for bridge id $bridgeid "
        read bridgepass
        if ! [[ $bridgeid =~ $re ]] ; then
         echo 'error: BridgeId is Not a number' >&2; exit 1
        fi
	echo "setPassword(LINK_TYPE_NETWORK, $bridgeid, '$bridgepass')"
        #echo "setPassword(LINK_TYPE_NETWORK, $bridgeid, '$bridgepass')" | tarantoolctl connect /var/run/tarantool/Registry.connect
        echo "Would you now like to add a talkgroup for bridge id $bridgeid?"
        read -r answer3
        ;;
	
esac

case $answer3 in

    no | No | n | N | nO)
     echo -e "Exiting now, password for $bridgeid has been saved" >&2; exit 0
     ;;

    yes | Yes | y | Y | YES | YeS | yEs | yES)
    echo -e "Master ID?"
    read master
    echo -e "Talkgroup number?"
    read num
    echo -e "Optional comment?"
    read note
    if [[ $master -gt 9999 ]] ; then
    echo "Error: Master ID must be four numbers" >&2; exit 1
    fi
    if [[ $master -lt 1000 ]] ; then
    echo "Error: Master ID must be four numbers" >&2; exit 1
    fi
    if ! [[ $master =~ $re ]] ; then
    echo "Error: Master ID is Not a number" >&2; exit 1
    fi
    if ! [[ $num =~ $re ]] ; then
    echo "Error: TG is Not a number" >&2; exit 1
    fi
    echo "box.space.Bridges:insert({$num,$master,$bridgeid,0,'$note'})"
    #echo "box.space.Bridges:insert({$num,$master,$bridgeid,0,'$note'})" | tarantoolctl connect /var/run/tarantool/Registry.control
    exit 0
    ;;

esac

case $action in

    A | Add | a | add | ADD | aDD | adD | ad | Ad | aD)
     echo -e "Master ID?"
     read master
     echo -e "Bridge ID?"
     read id
     echo -e "Talkgroup number?"
     read num
     echo -e "Optional comment?"
     read note
     if [[ $master -gt 9999 ]] ; then
     echo "Error: Master ID must be four numbers" >&2; exit 1
     fi
     if [[ $master -lt 1000 ]] ; then
     echo "Error: Master ID must be four numbers" >&2; exit 1
     fi
     if ! [[ $master =~ $re ]] ; then
     echo "Error: Master ID is Not a number" >&2; exit 1
     fi
     if ! [[ $num =~ $re ]] ; then
     echo "Error: TG is Not a number" >&2; exit 1
     fi
     if ! [[ $id =~ $re ]] ; then
     echo "Error: BridgeId is Not a number" >&2; exit 1
     fi
     echo "box.space.Bridges:insert({$num,$master,$id,0,'$note'})"
     #echo "box.space.Bridges:insert({$num,$master,$id,0,'$note'})" | tarantoolctl connect /var/run/tarantool/Registry.control
     exit 0
     ;;
	
    D | del | delete | Delete | d)
     echo -e "Bridge ID?"
     read id
     echo -e "Talkgroup number?"
     read num
     if ! [[ $num =~ $re ]] ; then
     echo "Error: TG is Not a number" >&2; exit 1
     fi
     if ! [[ $id =~ $re ]] ; then
     echo "Error: BridgeId is Not a number" >&2; exit 1
     fi
     echo "box.space.Bridges:delete({$num,$id,0})"
     #echo "box.space.Bridges:delete({$num,$id,0})" | tarantoolctl connect /var/run/tarantool/Registry.control
     exit 0
     ;;

esac
    
